<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:DiagramEditor.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d" d:DesignWidth="800" d:DesignHeight="450"
		xmlns:views="clr-namespace:DiagramEditor.Views"
		xmlns:models="clr-namespace:DiagramEditor.Models.DiagramObjects;assembly=DiagramEditor"
		xmlns:conv="clr-namespace:DiagramEditor.Models.Converters"
        x:Class="DiagramEditor.Views.MainWindow"
        Icon="/Assets/avalonia-logo.ico"
        Title="DiagramEditor">

    <Design.DataContext>
        <vm:MainWindowViewModel/>
    </Design.DataContext>
	
	<Window.Resources>
		<conv:DoubleIntConverter x:Key="doubleIntConverter"/>
	</Window.Resources>

	<Grid ShowGridLines="False" RowDefinitions="29, *" >
		<Border BorderBrush="Black" BorderThickness="2" Grid.Row="0">
			<DockPanel Grid.Row="0">
				<Menu Name="menuExport" DockPanel.Dock="Top">
					<MenuItem Header="_Экспортировать">
						<MenuItem Header="_XML"/>
						<MenuItem Click="OnExportMenuClickJSON" Header="_JSON"/>
						<MenuItem Header="_YAML"/>
						<MenuItem Header="_PNG"/>
						<Separator/>
						<MenuItem Header="_Закрыть"/>
					</MenuItem>
					<MenuItem Header="_Импортировать">
						<MenuItem Header="_XML"/>
						<MenuItem Click="OnImportMenuClickJSON" Header="_JSON"/>
						<MenuItem Header="_YAML"/>
						<Separator/>
						<MenuItem Header="_Закрыть"/>
					</MenuItem>
				</Menu>
			</DockPanel>
		</Border>

		<Grid ShowGridLines="False" Grid.Row="1" ColumnDefinitions="*,4*" >
			<Grid RowDefinitions="50,*">
				<Border BorderBrush="Black" BorderThickness="2" Grid.Row="1">
					<ContentControl Grid.Row="1" Content="{Binding Content}" VerticalContentAlignment="Top"/>
				</Border>
			
				<Border BorderBrush="Black" BorderThickness="2" Grid.Row="0">
					<Button Grid.Row="0" Name="buttonAdd" Grid.Column="0"
						HorizontalAlignment="Stretch" HorizontalContentAlignment="Center"
					 Content="Добавить элемент" Command="{Binding buttonAdd}" Height="{Binding $parent.Height}"/>
				</Border>
			</Grid>

			<ItemsControl Grid.Column="1"
						  Name="mainCanvas"
						  Width="{Binding $parent.Width}"
						  Height="{Binding $parent.Height}"
						  Items="{Binding ElementCollection}"
						  DragDrop.AllowDrop="True"
						  PointerPressed="OnPointerPressed">
				<ItemsControl.ItemsPanel>
					<ItemsPanelTemplate>
						<Canvas Name="highLevelCanvas" Background="White"/>
					</ItemsPanelTemplate>
				</ItemsControl.ItemsPanel>
				<ItemsControl.DataTemplates>

					<DataTemplate DataType="{x:Type	models:DiagramElement}">
						<views:DiagramElementControl Name="{Binding Name}" IsInterface="{Binding IsInterface}"
													 Attributes="{Binding Attributes}" StartPoint="{Binding StartPoint}"
													 Operations="{Binding Operations}"
													 ElementHeight="{Binding Height}" ElementWidth="{Binding Width}">
							<views:DiagramElementControl.RenderTransform>
								<TranslateTransform X="{Binding StartPoint.X}"
													Y="{Binding StartPoint.Y}"/>
							</views:DiagramElementControl.RenderTransform>
						</views:DiagramElementControl>
					</DataTemplate>

					<DataTemplate DataType="{x:Type	models:DiagramInheritanceLine}">
						<Canvas>
							<Line StartPoint="{Binding StartPoint}"
								  EndPoint="{Binding EndPoint}"
								  Stroke="Black"
								  StrokeThickness="2"/>
							<Polygon Points="-15,-10 0,0 -15,10"
								  Stroke="Black"
								  StrokeThickness="2"
								  Fill="White">
								<Polygon.RenderTransform>
									<TransformGroup>
										<RotateTransform Angle="{Binding Angle}"
														 CenterX="1"
														 CenterY="-5"/>
										<TranslateTransform X="{Binding EndPoint.X, Converter={StaticResource doubleIntConverter}}"
															Y="{Binding EndPoint.Y, Converter={StaticResource doubleIntConverter}}"/>
									</TransformGroup>
								</Polygon.RenderTransform>
							</Polygon>
						</Canvas>
					</DataTemplate>
					
					<DataTemplate DataType="{x:Type models:DiagramRealisationLine}">
						<Canvas>
							<Line StartPoint="{Binding StartPoint}"
								  EndPoint="{Binding EndPoint}"
								  Stroke="Black"
								  StrokeThickness="2"
								  StrokeDashArray="5,5"/>
							<Polygon Points="-15,-10 0,0 -15,10"
								  Stroke="Black"
								  StrokeThickness="2"
								  Fill="White">
								<Polygon.RenderTransform>
									<TransformGroup>
										<RotateTransform Angle="{Binding Angle}"
														 CenterX="1"
														 CenterY="-5"/>
										<TranslateTransform X="{Binding EndPoint.X, Converter={StaticResource doubleIntConverter}}"
															Y="{Binding EndPoint.Y, Converter={StaticResource doubleIntConverter}}"/>
									</TransformGroup>
								</Polygon.RenderTransform>
							</Polygon>
						</Canvas>
					</DataTemplate>
					<DataTemplate DataType="{x:Type models:DiagramDependencyLine}">
						<Canvas>
							<Line StartPoint="{Binding StartPoint}"
								  EndPoint="{Binding EndPoint}"
								  Stroke="Black"
								  StrokeThickness="2"
								  StrokeDashArray="5,5"/>
							<Polyline Points="-15,-10 0,0 -15,10"
								  Stroke="Black"
								  StrokeThickness="2">
								<Polyline.RenderTransform>
									<TransformGroup>
										<RotateTransform Angle="{Binding Angle}"
														 CenterX="1"
														 CenterY="-5"/>
										<TranslateTransform X="{Binding EndPoint.X, Converter={StaticResource doubleIntConverter}}"
															Y="{Binding EndPoint.Y, Converter={StaticResource doubleIntConverter}}"/>
									</TransformGroup>
								</Polyline.RenderTransform>
							</Polyline>
						</Canvas>
					</DataTemplate>
					<DataTemplate DataType="{x:Type	models:DiagramAggregationLine}">
						<Canvas>
							<Line StartPoint="{Binding StartPoint}"
								  EndPoint="{Binding EndPoint}"
								  Stroke="Black"
								  StrokeThickness="2"/>
							<Polygon Points="-15,-10 0,0 -15,10 -30,0"
								  Stroke="Black"
								  StrokeThickness="2"
								  Fill="White">
								<Polygon.RenderTransform>
									<TransformGroup>
										<RotateTransform Angle="{Binding Angle}"
														 CenterX="1.5"
														 CenterY="-4"/>
										<TranslateTransform X="{Binding EndPoint.X, Converter={StaticResource doubleIntConverter}}"
															Y="{Binding EndPoint.Y, Converter={StaticResource doubleIntConverter}}"/>
									</TransformGroup>
								</Polygon.RenderTransform>
							</Polygon>
						</Canvas>
					</DataTemplate>
					<DataTemplate DataType="{x:Type	models:DiagramCompositionLine}">
						<Canvas>
							<Line StartPoint="{Binding StartPoint}"
								  EndPoint="{Binding EndPoint}"
								  Stroke="Black"
								  StrokeThickness="2"/>
							<Polygon Points="-15,-10 0,0 -15,10 -30,0"
								  Stroke="Black"
								  StrokeThickness="2"
								  Fill="Black">
								<Polygon.RenderTransform>
									<TransformGroup>
										<RotateTransform Angle="{Binding Angle}"
														 CenterX="1.5"
														 CenterY="-4"/>
										<TranslateTransform X="{Binding EndPoint.X, Converter={StaticResource doubleIntConverter}}"
															Y="{Binding EndPoint.Y, Converter={StaticResource doubleIntConverter}}"/>
									</TransformGroup>
								</Polygon.RenderTransform>
							</Polygon>
						</Canvas>
					</DataTemplate>
					<DataTemplate DataType="{x:Type	models:DiagramAssociationLine}">
						<Canvas>
							<Line StartPoint="{Binding StartPoint}"
								  EndPoint="{Binding EndPoint}"
								  Stroke="Black"
								  StrokeThickness="2"/>
							<Polyline Points="-15,-10 0,0 -15,10"
								  Stroke="Black"
								  StrokeThickness="2">
								<Polyline.RenderTransform>
									<TransformGroup>
										<RotateTransform Angle="{Binding Angle}"
														 CenterX="1"
														 CenterY="-5"/>
										<TranslateTransform X="{Binding EndPoint.X, Converter={StaticResource doubleIntConverter}}"
															Y="{Binding EndPoint.Y, Converter={StaticResource doubleIntConverter}}"/>
									</TransformGroup>
								</Polyline.RenderTransform>
							</Polyline>
						</Canvas>
					</DataTemplate>
					
					
				</ItemsControl.DataTemplates>
			</ItemsControl> 
			
		</Grid>
		
	</Grid>

</Window>
